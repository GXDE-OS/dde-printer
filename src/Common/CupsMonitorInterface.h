/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.deepin.print.helper.xml -i zcupsmonitor.h -p CupsMonitorInterface
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CUPSMONITORINTERFACE_H
#define CUPSMONITORINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "zcupsmonitor.h"

/*
 * Proxy class for interface com.deepin.print.helper
 */
class ComDeepinPrintHelperInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.print.helper"; }

public:
    ComDeepinPrintHelperInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComDeepinPrintHelperInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> getJobNotify(const QVariantMap &job)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(job);
        return asyncCallWithArgumentList(QStringLiteral("getJobNotify"), argumentList);
    }

    inline QDBusPendingReply<QString> getStateString(int iState)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(iState);
        return asyncCallWithArgumentList(QStringLiteral("getStateString"), argumentList);
    }

    inline QDBusPendingReply<bool> isJobPurged(int id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QStringLiteral("isJobPurged"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void signalJobStateChanged(int id, int state, const QString &message);
    void signalPrinterDelete(const QString &printer);
    void signalPrinterStateChanged(const QString &printer, int state, const QString &message);
    void signalShowJobsWindow();
    void signalShowTrayIcon(bool in0);
};

namespace com {
  namespace deepin {
    namespace print {
      typedef ::ComDeepinPrintHelperInterface helper;
    }
  }
}
#endif
